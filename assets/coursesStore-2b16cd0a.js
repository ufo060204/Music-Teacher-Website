import{d as y}from"./pinia-ef994b1a.js";import{g as A,S as l,n as g,h as m,e as i,d,u as w}from"./sweetalert2.all-690f4369.js";import{t as I}from"./teacherStore-8add2b4b.js";import{u as S}from"./userStore-9e58a35f.js";const u=A(),p=I(),D=S(),f=l.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:1500,timerProgressBar:!0,didOpen:e=>{e.addEventListener("mouseenter",l.stopTimer),e.addEventListener("mouseleave",l.resumeTimer)}}),P=y("coursesStore",{state:()=>({isLoading:!0,isBought:null,AllCourseData:[],teacherNames:{},courseDetails:{data:{}},courseViewDetails:{data:{buyer:[],classMode:[],courseId:"",courseImg:"",courseIntro:"",location:"",name:"",price:0,startTime:0,teacherId:{},teacherImg:"",time:0,type:""},teacherImg:"",teacherName:"",teacherUid:""},popularCourses:[],suggestCourses:[]}),actions:{async getAllCourses(){const e=await g(m(u,"AllCourses"));this.AllCourseData=[],e.forEach(s=>{const t={id:s.id,createdTime:s._document.createTime.timestamp.seconds,data:s.data()};this.AllCourseData.push(t)})},async getAllCoursesAndTeacher(){this.isLoading=!0,this.AllCourseData=[];const e=await g(m(u,"AllCourses")),s=[];e.forEach(t=>{const a=t.data(),c=a.teacherId,o=i(c).then(r=>{if(r.exists()){const h=r.data().displayName;a.teacherName=h,this.teacherNames[a.teacherId]=h}else console.log(`老師 document ${a.teacherId} 不存在`)}).catch(r=>{console.error("老師 document fetching 錯誤",r)});s.push(o);const n={id:t.courseId,data:a};this.AllCourseData.push(n)}),await Promise.all(s),this.isLoading=!1},getBuyerCount(e){return e.data.buyer.length},async getPopularCourses(){this.popularCourses=[],await this.getAllCoursesAndTeacher(),this.AllCourseData.sort((e,s)=>s.data.buyer.length-e.data.buyer.length),this.popularCourses=this.AllCourseData.slice(0,10)},async getSuggestCourses(){this.isLoading=!0,this.suggestCourses=[],await this.getAllCoursesAndTeacher();const e=[];this.AllCourseData.forEach(t=>{t.data.type===this.courseDetails.data.type&&e.push(t)});const s=e.sort(()=>.5-Math.random());this.suggestCourses=s.slice(0,3),this.isLoading=!1},async getCourseDetails(e){this.isLoading=!0;const s=d(u,"AllCourses",e),t=await i(s);if(t.exists()){const a=t.data(),c=a.teacherId,o=await i(c);if(o.exists()){const n=o.data().displayName,r=o.data().userIntro,h=o.data().userPhoto,C=o.data().uid;this.courseDetails={data:a,teacherName:n,teacherIntro:r,teacherImg:h,teacherUid:C},this.courseViewDetails=JSON.parse(JSON.stringify(this.courseDetails)),this.boughtCheck(e)}else console.log(`老師 document ${c.path} 不存在`)}else console.log(`課程 document ${e} 不存在`);this.isLoading=!1},async updateCourseData(e){this.courseDetails.data.courseImg=p.teacherData.courseImg,await w(d(u,"AllCourses",e),this.courseDetails.data);try{p.teacherData.courseImg="",this.getCourseDetails(e),f.fire({icon:"success",title:"課程資料更新成功"})}catch(s){f.fire({icon:"error",title:`課程資料更新失敗 ${s}`})}},async boughtCheck(e){await D.checkMemberObserver();const s=d(u,"users",D.uid);try{const t=await i(s);if(t.exists()){const a=await t.get("courses_joined");(await Promise.all(a.map(async o=>(await i(o)).data().courseId))).includes(e)?this.isBought=!0:this.isBought=!1}else console.log("使用者 document 不存在(收藏)")}catch(t){console.error("沒有符合的課程:",t)}}},getters:{}});export{P as c};

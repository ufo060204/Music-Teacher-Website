import{d as U}from"./pinia-ef994b1a.js";import{b as f}from"./index.esm2017-717e340d.js";import{g as A,G as M,S as u,a as d,j as k,k as B,d as c,s as g,l as I,m as P,o as b,e as l,u as h,b as R,c as E,h as p,q as w,n as D}from"./sweetalert2.all-09c79ce8.js";import{m as C}from"./moment-91f1ce3e.js";const r=A(),v=new M,n=u.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:1500,timerProgressBar:!0,didOpen:t=>{t.addEventListener("mouseenter",u.stopTimer),t.addEventListener("mouseleave",u.resumeTimer)}}),q=U("usersStore",{state:()=>({singUpData:{email:"",password:""},loginUser:{email:"",password:""},userData:{uid:"",userPhoto:"",userBackgroundPhoto:"",displayName:"",email:"",tel:"",gender:"",facebook:"",instagrm:"",discord:"",birthday:"",address:"",story:"",userIntro:"",creationTime:"",lastSignInTime:"",courses_created:[],courses_joined:[],coursesCollection:[],cart:[]},userDataAll:{},personalViewData:{},coursesJoined:[],coursesCreated:[],coursesCollection:[],coursesCollectionId:[],isLoading:!0,isLogin:!0,isMember:!1,uid:"",isEditMode:!1,updateNameStatus:!1,updateStoryStatus:!1,buyerStudyTimeData:[],myStudyTimeData:[],updateBuyerStudyTimeUid:"",updateBuyerStudyTimeCourseId:"",buyerStudyTime:"",buyerStudyTimeAll:[]}),actions:{signUp(){const t=d();k(t,this.singUpData.email,this.singUpData.password).then(e=>{this.userData.uid=e.user.uid,this.userData.email=e.user.email,this.setUserData(),this.checkMemberObserver(),this.singUpData.email="",this.singUpData.password="",f.push("/"),u.fire({icon:"success",title:"恭喜註冊成功",showConfirmButton:!1,timer:1500})}).catch(e=>{e.code==="auth/email-already-in-use"?u.fire({icon:"error",title:"你註冊失敗了",text:"此 email 已被使用過",confirmButtonColor:"#FE715F"}):u.fire({icon:"error",title:"你註冊失敗了",confirmButtonColor:"#FE715F"})})},login(){const t=d();B(t,this.loginUser.email,this.loginUser.password).then(e=>{const s=c(r,"users",e.user.uid);g(s,{lastSignInTime:e.user.metadata.lastSignInTime},{merge:!0}),this.isMember=!0,this.loginUser.email="",this.loginUser.password="",u.fire({icon:"success",title:"登入成功",showConfirmButton:!1,timer:1500}),f.push("/")}).catch(e=>{u.fire({icon:"error",title:`登入失敗 ${e.message}`,showConfirmButton:!1,timer:1500})})},loginGoogle(){const t=d();I(t,v).then(e=>{if(this.isMember=!0,e.user.metadata.creationTime===e.user.metadata.lastSignInTime)this.userData.uid=e.user.uid,this.userData.email=e.user.email,this.userData.creationTime=e.user.metadata.creationTime,this.userData.lastSignInTime=e.user.metadata.lastSignInTime,this.setUserData();else{const s=c(r,"users",e.user.uid);g(s,{lastSignInTime:e.user.metadata.lastSignInTime},{merge:!0})}f.push("/"),this.getUserDataAll(),n.fire({icon:"success",title:"使用google登入成功"})}).catch(e=>{n.fire({icon:"error",title:`使用 google 登入失敗 ${e.message}`})})},signOut(){const t=d();P(t).then(e=>{this.isMember=!1,n.fire({icon:"success",title:"登出成功"})}).catch(e=>{n.fire({icon:"warning",title:`登出錯誤 ${e}`})})},async setUserData(){try{await g(c(r,"users",this.userData.uid),this.userData),n.fire({icon:"success",title:"課程會員新增資料成功"})}catch(t){n.fire({icon:"error",title:`課程會員資料新增失敗 ${t}`})}},async checkMemberObserver(){return new Promise((t,e)=>{const s=d();b(s,a=>{a?(this.isMember=!0,this.uid=a.uid,t(this.uid),this.getUserDataAll()):a?(e(new Error("你是登出狀態")),this.isMember=!1):this.isMember=!1})})},checkMemberTeacherStep(){const t=d();b(t,e=>{e||(f.push("/login"),u.fire({icon:"info",title:"請先登入",confirmButtonColor:"#FE715F"}))})},async getUserDataAll(){try{const t=c(r,"users",this.uid),e=await l(t);e.exists()?(this.userData=e.data(),this.personalViewData={...this.userData}):console.log("No such document!")}catch(t){console.log(t)}},async updateUserData(){await h(c(r,"users",this.userData.uid),this.userData);try{this.isEditMode=!1,this.getUserDataAll(),n.fire({icon:"success",title:"會員資料更新成功"})}catch(t){n.fire({icon:`error ${t}`,title:"會員資料更新失敗"})}},async updateUserPhoto(t,e){try{const s=e.target.files[0];if(!s||!(await this.beforeUpdate(s)).isValid)return;this.imgHandle(t,s)}catch(s){console.log(s)}finally{e.target.value=null}},beforeUpdate(t){return new Promise(e=>{const a=["image/jpeg","image/png"].includes(t.type),i=t.size/1024/1024<.15;a?i||u.fire({icon:"error",title:"尺寸錯誤",text:"圖片大小需小於 0.15 MB"}):u.fire({icon:"error",title:"格式錯誤",text:"請上傳 JPG 或 PNG 檔"}),e({isValid:a&&i})})},imgHandle(t,e){const s=new FormData;s.append("photoFile",e);const a=s.get("photoFile"),i=new FileReader;i.readAsDataURL(a),i.onload=o=>{t==="course"?(this.teacherData.courseImg=o.target.result,n.fire({icon:"success",title:"課程圖片更新成功"})):t==="teacher"?(this.userData.userPhoto=o.target.result,h(c(r,"users",this.userData.uid),this.userData),n.fire({icon:"success",title:"使用者圖片更新成功"})):t==="background"&&(this.userData.userBackgroundPhoto=o.target.result,h(c(r,"users",this.userData.uid),this.userData),n.fire({icon:"success",title:"背景圖片更新成功"}))}},async getUserAllCreated(){await this.checkMemberObserver();const t=c(r,"users",this.uid);l(t).then(e=>{if(e.exists()){const s=e.get("courses_created"),a=[];return s.forEach(i=>{a.push(l(i))}),Promise.all(a)}else return console.log("使用者 document 不存在(老師)"),[]}).then(e=>{this.coursesCreated=e.map(s=>s.data())}).catch(e=>{console.err("沒有符合的開課:",e)})},async addToCollection(t){if(!this.isMember){u.fire({icon:"info",title:"請先登入",confirmButtonColor:"#FE715F"});return}const e=c(r,"AllCourses",t),s=c(r,"users",this.userData.uid);await h(s,{coursesCollection:R(e)},{merge:!0});try{this.getUserAllCollection(),n.fire({icon:"success",title:"加入收藏成功"})}catch(a){n.fire({icon:"error",title:`加入收藏失敗 ${a}`})}},async removeFromCollection(t){const e=c(r,"AllCourses",t),s=c(r,"users",this.userData.uid);await h(s,{coursesCollection:E(e)},{merge:!0});try{this.getUserAllCollection(),n.fire({icon:"success",title:"移除收藏成功"})}catch(a){n.fire({icon:`error ${a}`,title:"移除收藏失敗"})}},async getUserAllCollection(){await this.checkMemberObserver();const t=c(r,"users",this.uid);l(t).then(e=>{if(e.exists()){const s=e.get("coursesCollection"),a=[];return s.forEach(i=>{a.push(l(i))}),Promise.all(a)}else console.log("使用者 document 不存在(收藏)")}).then(async e=>{this.coursesCollection=await Promise.all(e.map(async s=>{const a=s.data(),i=s.data().teacherId,o=await this.getTeacherDisplayName(i);return{...a,teacherDisplayName:o}})),this.coursesCollectionId=e.map(s=>s.data().courseId)}).catch(e=>{console.err("沒有符合的收藏:",e)})},async getUserAllJoin(){this.isLoading=!0,await this.checkMemberObserver();const t=c(r,"users",this.uid);l(t).then(e=>{if(e.exists()){const s=e.get("courses_joined"),a=[];return s.forEach(i=>{a.push(l(i))}),Promise.all(a)}else console.log("使用者 document 不存在(收藏)")}).then(async e=>{this.coursesJoined=await Promise.all(e.map(async s=>{const a=s.data(),i=s.data().teacherId,o=await this.getTeacherDisplayName(i);return{...a,teacherDisplayName:o}})),this.isLoading=!1}).catch(e=>{console.err("沒有符合的課程:",e)})},async getTeacherDisplayName(t){try{const e=await l(t);return e.exists()&&e.data().displayName||"Unknown Teacher"}catch(e){return console.err("獲取老師資料失敗",e),"Unknown Teacher"}},toggleCollection(t){this.coursesCollectionId.indexOf(t)>-1?this.removeFromCollection(t):this.addToCollection(t)},async getBuyer(t){const e=p(r,"AllCourses",t,"buyerStudyTime"),s=w(e);(await D(s)).forEach(async i=>{const o={},m=c(r,"users",i.id),S=(await l(m)).data();o.uid=i.id,o.courseId=t,o.studyTime=i.data().studyTime,o.createdTime=i.data().createdTime,o.displayName=S.displayName,this.buyerStudyTimeData.push(o)})},async getMyStudyTime(t){await this.checkMemberObserver();const e=p(r,"AllCourses",t,"buyerStudyTime"),s=w(e);(await D(s)).forEach(async i=>{i.id===this.uid&&this.myStudyTimeData.push(i.data())})},closeBuyTimeModal(){this.buyerStudyTimeData=[],this.myStudyTimeData=[]},beforeUpdateBuyerStudyTime(t,e){this.updateBuyerStudyTimeCourseId=t,this.updateBuyerStudyTimeUid=e},async updateBuyerStudyTime(){console.log(this.buyerStudyTimeData);const t=c(r,"AllCourses",this.updateBuyerStudyTimeCourseId,"buyerStudyTime",this.updateBuyerStudyTimeUid);try{await h(t,{studyTime:this.buyerStudyTime}),this.buyerStudyTimeData=[],n.fire({icon:"success",title:"上課時間更新成功"})}catch(e){n.fire({icon:"error",title:`上課時間更新失敗 ${e}`})}},async getUserAllJoinStudyTime(){this.buyerStudyTimeAll=[],await this.checkMemberObserver();const t=c(r,"users",this.uid);l(t).then(async e=>{e.exists()?(await e.get("courses_joined")).map(async a=>{const i={},o=await l(a);i.title=o.data().name;const m=a.id;i.courseId=m;const T=p(r,"AllCourses",m,"buyerStudyTime");(await D(T)).forEach(async y=>{y.id===this.uid&&y.data().studyTime&&(i.start=C(y.data().studyTime).format("YYYY-MM-DD HH:mm"),i.end=C(y.data().studyTime).add(o.data().time,"minute").format("YYYY-MM-DD HH:mm"))}),this.buyerStudyTimeAll.push(i)}):console.log("使用者 document 不存在(收藏)")}).catch(e=>{console.err("取得使用者文檔出錯:",e)})}},getters:{collectionStatus(){return this.getUserAllCollection(),t=>this.coursesCollectionId.indexOf(t)>-1?"bookmark":"bookmark_border"}}});export{q as u};
